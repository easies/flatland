/* vim: set ft=processing : */


void mouseClicked() {
    #if DEBUG
        println("clicked   " + "(" + mouseX + ", " + mouseY + ")" + mouseButton);
    #endif
}

void mouseDragged() {
    #if DEBUG
        println("dragged" + "(" + mouseX + ", " + mouseY + ")" + mouseButton);
    #endif
    penta.control = new PVector(mouseX, mouseY);
    redraw();
}

void mouseMoved() {
    #if DEBUG
        println("moved  " + "(" + mouseX + ", " + mouseY + ")" + mouseButton);
    #endif
    penta.control = new PVector(mouseX, mouseY);
    redraw();
}

void mousePressed() {
    penta.pressed = true;
    penta.next = new PVector(mouseX, mouseY);
    redraw();
    #if DEBUG
        println("pressed" + "(" + mouseX + ", " + mouseY + ")" + mouseButton);
    #endif
}

void mouseReleased() {
    penta.pressed = false;
    penta.control = new PVector(mouseX, mouseY);
    penta.set_points();
    #if DEBUG
        println("released" + "(" + mouseX + ", " + mouseY + ")" + mouseButton);
    #endif
    redraw();
}

void keyPressed() {
	#if DEBUG
		println("pressed  " + key + " " + keyCode);
	#endif
    switch (char(key)) {
    case 'R':
    case 'r':
        penta.rotate_by(0.1);
        break;
    case 'E':
    case 'e':
        penta.rotate_by(-0.1);
        break;
    default:
        break;
    }
}

#if DEBUG
void keyReleased() {
    println("released " + int(key) + " " + keyCode);
}

void keyTyped() {
    println("typed    " + int(key) + " " + keyCode);
}
#endif
